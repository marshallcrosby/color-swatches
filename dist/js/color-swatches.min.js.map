{"version":3,"sources":["color-swatches.js","../../node_modules/gradient-parser/build/web.js"],"names":["GradientParser","window","parse","tokens","linearGradient","repeatingLinearGradient","radialGradient","repeatingRadialGradient","sideOrCorner","extentKeywords","positionKeywords","pixelValue","percentageValue","emValue","angleValue","startCall","endCall","comma","hexColor","literalColor","rgbColor","rgbaColor","number","input","error","msg","err","Error","source","getAST","ast","matchListing","matchDefinition","length","matchGradient","matchLinearOrientation","matchListRadialOrientations","gradientType","pattern","orientationMatcher","matchCall","captures","orientation","scan","type","colorStops","matchColorStop","callback","result","match","radialOrientations","lookaheadCache","radialOrientation","matchRadialOrientation","push","radialType","circle","style","matchLength","matchExtentKeyword","matchCircle","ellipse","matchDistance","matchEllipse","at","matchAtPosition","extent","positionAt","defaultPosition","matchPositioning","positioning","location","x","y","value","matcher","color","matchNumber","captureIndex","regexp","blankCaptures","exec","consume","size","substr","code","toString","stringify","visitor","visit_linear-gradient","node","visit_gradient","visit_repeating-linear-gradient","visit_radial-gradient","visit_repeating-radial-gradient","visit","visit_shape","visit_default-radial","visit_extent-keyword","visit_position-keyword","visit_position","visit_%","visit_em","visit_px","visit_literal","visit_color","visit_hex","visit_rgb","join","visit_rgba","resultColor","visit_angular","visit_directional","visit_array","elements","forEach","element","i","Array","nodeVisitor","root","scriptLinkage","document","getElementById","querySelector","param","css","urlParam","URLSearchParams","getAttribute","split","get","swatchStyles","swatchStyleTag","createElement","setAttribute","textContent","head","appendChild","rgbaToHex","rgba","slice","map","n","Math","round","parseFloat","padStart","replace","htmlToElement","html","template","trim","innerHTML","content","firstChild","querySelectorAll","swatchEl","classList","add","colorEl","hexEl","varEl","rgbEl","currentBgColor","getComputedStyle","backgroundColor","bgColor","varValue","getPropertyValue","includes","toUpperCase","closest","remove","backgroundImage","cssBgGradient","gradientVarValue","colorInfo","emptyEntryEl","gradientObject","len","gradType","gradTypeEntry","innerText","grad","gradStopEntry","shortStopLabelsThree","shortStopLabelsTwo","stop","stopLabels","colorFull","stopFull","undefined","colorStopValue","gradColorStopEntry","gradientVarEntry","item","addEventListener","navigator","clipboard","writeText","itemBubble","toLowerCase","setTimeout"],"mappings":"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","sourcesContent":[null,"var GradientParser = (window.GradientParser || {});\n\n// Copyright (c) 2014 Rafael Caricio. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nvar GradientParser = (GradientParser || {});\n\nGradientParser.parse = (function() {\n\n  var tokens = {\n    linearGradient: /^(\\-(webkit|o|ms|moz)\\-)?(linear\\-gradient)/i,\n    repeatingLinearGradient: /^(\\-(webkit|o|ms|moz)\\-)?(repeating\\-linear\\-gradient)/i,\n    radialGradient: /^(\\-(webkit|o|ms|moz)\\-)?(radial\\-gradient)/i,\n    repeatingRadialGradient: /^(\\-(webkit|o|ms|moz)\\-)?(repeating\\-radial\\-gradient)/i,\n    sideOrCorner: /^to (left (top|bottom)|right (top|bottom)|left|right|top|bottom)/i,\n    extentKeywords: /^(closest\\-side|closest\\-corner|farthest\\-side|farthest\\-corner|contain|cover)/,\n    positionKeywords: /^(left|center|right|top|bottom)/i,\n    pixelValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))px/,\n    percentageValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))\\%/,\n    emValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))em/,\n    angleValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))deg/,\n    startCall: /^\\(/,\n    endCall: /^\\)/,\n    comma: /^,/,\n    hexColor: /^\\#([0-9a-fA-F]+)/,\n    literalColor: /^([a-zA-Z]+)/,\n    rgbColor: /^rgb/i,\n    rgbaColor: /^rgba/i,\n    number: /^(([0-9]*\\.[0-9]+)|([0-9]+\\.?))/\n  };\n\n  var input = '';\n\n  function error(msg) {\n    var err = new Error(input + ': ' + msg);\n    err.source = input;\n    throw err;\n  }\n\n  function getAST() {\n    var ast = matchListDefinitions();\n\n    if (input.length > 0) {\n      error('Invalid input not EOF');\n    }\n\n    return ast;\n  }\n\n  function matchListDefinitions() {\n    return matchListing(matchDefinition);\n  }\n\n  function matchDefinition() {\n    return matchGradient(\n            'linear-gradient',\n            tokens.linearGradient,\n            matchLinearOrientation) ||\n\n          matchGradient(\n            'repeating-linear-gradient',\n            tokens.repeatingLinearGradient,\n            matchLinearOrientation) ||\n\n          matchGradient(\n            'radial-gradient',\n            tokens.radialGradient,\n            matchListRadialOrientations) ||\n\n          matchGradient(\n            'repeating-radial-gradient',\n            tokens.repeatingRadialGradient,\n            matchListRadialOrientations);\n  }\n\n  function matchGradient(gradientType, pattern, orientationMatcher) {\n    return matchCall(pattern, function(captures) {\n\n      var orientation = orientationMatcher();\n      if (orientation) {\n        if (!scan(tokens.comma)) {\n          error('Missing comma before color stops');\n        }\n      }\n\n      return {\n        type: gradientType,\n        orientation: orientation,\n        colorStops: matchListing(matchColorStop)\n      };\n    });\n  }\n\n  function matchCall(pattern, callback) {\n    var captures = scan(pattern);\n\n    if (captures) {\n      if (!scan(tokens.startCall)) {\n        error('Missing (');\n      }\n\n      var result = callback(captures);\n\n      if (!scan(tokens.endCall)) {\n        error('Missing )');\n      }\n\n      return result;\n    }\n  }\n\n  function matchLinearOrientation() {\n    return matchSideOrCorner() ||\n      matchAngle();\n  }\n\n  function matchSideOrCorner() {\n    return match('directional', tokens.sideOrCorner, 1);\n  }\n\n  function matchAngle() {\n    return match('angular', tokens.angleValue, 1);\n  }\n\n  function matchListRadialOrientations() {\n    var radialOrientations,\n        radialOrientation = matchRadialOrientation(),\n        lookaheadCache;\n\n    if (radialOrientation) {\n      radialOrientations = [];\n      radialOrientations.push(radialOrientation);\n\n      lookaheadCache = input;\n      if (scan(tokens.comma)) {\n        radialOrientation = matchRadialOrientation();\n        if (radialOrientation) {\n          radialOrientations.push(radialOrientation);\n        } else {\n          input = lookaheadCache;\n        }\n      }\n    }\n\n    return radialOrientations;\n  }\n\n  function matchRadialOrientation() {\n    var radialType = matchCircle() ||\n      matchEllipse();\n\n    if (radialType) {\n      radialType.at = matchAtPosition();\n    } else {\n      var extent = matchExtentKeyword();\n      if (extent) {\n        radialType = extent;\n        var positionAt = matchAtPosition();\n        if (positionAt) {\n          radialType.at = positionAt;\n        }\n      } else {\n        var defaultPosition = matchPositioning();\n        if (defaultPosition) {\n          radialType = {\n            type: 'default-radial',\n            at: defaultPosition\n          };\n        }\n      }\n    }\n\n    return radialType;\n  }\n\n  function matchCircle() {\n    var circle = match('shape', /^(circle)/i, 0);\n\n    if (circle) {\n      circle.style = matchLength() || matchExtentKeyword();\n    }\n\n    return circle;\n  }\n\n  function matchEllipse() {\n    var ellipse = match('shape', /^(ellipse)/i, 0);\n\n    if (ellipse) {\n      ellipse.style =  matchDistance() || matchExtentKeyword();\n    }\n\n    return ellipse;\n  }\n\n  function matchExtentKeyword() {\n    return match('extent-keyword', tokens.extentKeywords, 1);\n  }\n\n  function matchAtPosition() {\n    if (match('position', /^at/, 0)) {\n      var positioning = matchPositioning();\n\n      if (!positioning) {\n        error('Missing positioning value');\n      }\n\n      return positioning;\n    }\n  }\n\n  function matchPositioning() {\n    var location = matchCoordinates();\n\n    if (location.x || location.y) {\n      return {\n        type: 'position',\n        value: location\n      };\n    }\n  }\n\n  function matchCoordinates() {\n    return {\n      x: matchDistance(),\n      y: matchDistance()\n    };\n  }\n\n  function matchListing(matcher) {\n    var captures = matcher(),\n      result = [];\n\n    if (captures) {\n      result.push(captures);\n      while (scan(tokens.comma)) {\n        captures = matcher();\n        if (captures) {\n          result.push(captures);\n        } else {\n          error('One extra comma');\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function matchColorStop() {\n    var color = matchColor();\n\n    if (!color) {\n      error('Expected color definition');\n    }\n\n    color.length = matchDistance();\n    return color;\n  }\n\n  function matchColor() {\n    return matchHexColor() ||\n      matchRGBAColor() ||\n      matchRGBColor() ||\n      matchLiteralColor();\n  }\n\n  function matchLiteralColor() {\n    return match('literal', tokens.literalColor, 0);\n  }\n\n  function matchHexColor() {\n    return match('hex', tokens.hexColor, 1);\n  }\n\n  function matchRGBColor() {\n    return matchCall(tokens.rgbColor, function() {\n      return  {\n        type: 'rgb',\n        value: matchListing(matchNumber)\n      };\n    });\n  }\n\n  function matchRGBAColor() {\n    return matchCall(tokens.rgbaColor, function() {\n      return  {\n        type: 'rgba',\n        value: matchListing(matchNumber)\n      };\n    });\n  }\n\n  function matchNumber() {\n    return scan(tokens.number)[1];\n  }\n\n  function matchDistance() {\n    return match('%', tokens.percentageValue, 1) ||\n      matchPositionKeyword() ||\n      matchLength();\n  }\n\n  function matchPositionKeyword() {\n    return match('position-keyword', tokens.positionKeywords, 1);\n  }\n\n  function matchLength() {\n    return match('px', tokens.pixelValue, 1) ||\n      match('em', tokens.emValue, 1);\n  }\n\n  function match(type, pattern, captureIndex) {\n    var captures = scan(pattern);\n    if (captures) {\n      return {\n        type: type,\n        value: captures[captureIndex]\n      };\n    }\n  }\n\n  function scan(regexp) {\n    var captures,\n        blankCaptures;\n\n    blankCaptures = /^[\\n\\r\\t\\s]+/.exec(input);\n    if (blankCaptures) {\n        consume(blankCaptures[0].length);\n    }\n\n    captures = regexp.exec(input);\n    if (captures) {\n        consume(captures[0].length);\n    }\n\n    return captures;\n  }\n\n  function consume(size) {\n    input = input.substr(size);\n  }\n\n  return function(code) {\n    input = code.toString();\n    return getAST();\n  };\n})();\n\n// Copyright (c) 2014 Rafael Caricio. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nvar GradientParser = (GradientParser || {});\n\nGradientParser.stringify = (function() {\n\n  var visitor = {\n\n    'visit_linear-gradient': function(node) {\n      return visitor.visit_gradient(node);\n    },\n\n    'visit_repeating-linear-gradient': function(node) {\n      return visitor.visit_gradient(node);\n    },\n\n    'visit_radial-gradient': function(node) {\n      return visitor.visit_gradient(node);\n    },\n\n    'visit_repeating-radial-gradient': function(node) {\n      return visitor.visit_gradient(node);\n    },\n\n    'visit_gradient': function(node) {\n      var orientation = visitor.visit(node.orientation);\n      if (orientation) {\n        orientation += ', ';\n      }\n\n      return node.type + '(' + orientation + visitor.visit(node.colorStops) + ')';\n    },\n\n    'visit_shape': function(node) {\n      var result = node.value,\n          at = visitor.visit(node.at),\n          style = visitor.visit(node.style);\n\n      if (style) {\n        result += ' ' + style;\n      }\n\n      if (at) {\n        result += ' at ' + at;\n      }\n\n      return result;\n    },\n\n    'visit_default-radial': function(node) {\n      var result = '',\n          at = visitor.visit(node.at);\n\n      if (at) {\n        result += at;\n      }\n      return result;\n    },\n\n    'visit_extent-keyword': function(node) {\n      var result = node.value,\n          at = visitor.visit(node.at);\n\n      if (at) {\n        result += ' at ' + at;\n      }\n\n      return result;\n    },\n\n    'visit_position-keyword': function(node) {\n      return node.value;\n    },\n\n    'visit_position': function(node) {\n      return visitor.visit(node.value.x) + ' ' + visitor.visit(node.value.y);\n    },\n\n    'visit_%': function(node) {\n      return node.value + '%';\n    },\n\n    'visit_em': function(node) {\n      return node.value + 'em';\n    },\n\n    'visit_px': function(node) {\n      return node.value + 'px';\n    },\n\n    'visit_literal': function(node) {\n      return visitor.visit_color(node.value, node);\n    },\n\n    'visit_hex': function(node) {\n      return visitor.visit_color('#' + node.value, node);\n    },\n\n    'visit_rgb': function(node) {\n      return visitor.visit_color('rgb(' + node.value.join(', ') + ')', node);\n    },\n\n    'visit_rgba': function(node) {\n      return visitor.visit_color('rgba(' + node.value.join(', ') + ')', node);\n    },\n\n    'visit_color': function(resultColor, node) {\n      var result = resultColor,\n          length = visitor.visit(node.length);\n\n      if (length) {\n        result += ' ' + length;\n      }\n      return result;\n    },\n\n    'visit_angular': function(node) {\n      return node.value + 'deg';\n    },\n\n    'visit_directional': function(node) {\n      return 'to ' + node.value;\n    },\n\n    'visit_array': function(elements) {\n      var result = '',\n          size = elements.length;\n\n      elements.forEach(function(element, i) {\n        result += visitor.visit(element);\n        if (i < size - 1) {\n          result += ', ';\n        }\n      });\n\n      return result;\n    },\n\n    'visit': function(element) {\n      if (!element) {\n        return '';\n      }\n      var result = '';\n\n      if (element instanceof Array) {\n        return visitor.visit_array(element, result);\n      } else if (element.type) {\n        var nodeVisitor = visitor['visit_' + element.type];\n        if (nodeVisitor) {\n          return nodeVisitor(element);\n        } else {\n          throw Error('Missing visitor visit_' + element.type);\n        }\n      } else {\n        throw Error('Invalid node.');\n      }\n    }\n\n  };\n\n  return function(root) {\n    return visitor.visit(root);\n  };\n})();\n"]}